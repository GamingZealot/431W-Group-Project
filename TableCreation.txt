CREATE TABLE Categories(
	CategoryId	INTEGER		NOT NULL, 
	ParentId	INTEGER,
	CategoryName	CHAR(20)	NOT NULL,
	PRIMARY KEY(CategoryId) 
);

CREATE TABLE Categorized_as(
	CategoryId	INTEGER		NOT NULL,
	ItemId		INTEGER		NOT NULL,
	PRIMARY KEY(CategoryId, ItemId),
	FOREIGN KEY(CategoryId) REFERENCES Categories(CategoryId),
	FOREIGN KEY(ItemId) REFERENCES Items(ItemId)
);

CREATE TABLE Items(
	ItemId		INTEGER		NOT NULL,
	Location	CHAR(40), 
	Paydate		DATE,
	Description	CHAR(100),
	PRIMARY KEY(ItemId) 
);

CREATE TABLE Sold_by(
	ItemId		INTEGER		NOT NULL,
	SellerId	INTEGER		NOT NULL,
	PRIMARY KEY(ItemId, SellerId),
	FOREIGN KEY(SellerId) REFERENCES Users(uid),
	FOREIGN KEY(ItemId) REFERENCES Items(ItemId)	
);

CREATE TABLE Sellers(
	uid		INTEGER		NOT NULL, 
	POC		CHAR(20)	NOT NULL,
	Phone		INTEGER		NOT NULL,
	AddressStreet	CHAR(50), 
	AddressCity	CHAR(20),
	AddressState	CHAR(10),
	AddressZip	INTEGER,
	Name		CHAR(20),
	Revenue		DEC(10,2),
	Category	CHAR(15),
	RatingAvg	FLOAT(3,1),
	TotalRatings	INTEGER,
	PRIMARY KEY(uid),
	FOREIGN KEY(uid) REFERENCES Users(uid)
);

CREATE TABLE Stocks(
	ItemId		INTEGER		NOT NULL,
	Title		CHAR(20)	NOT NULL,
	PRIMARY KEY(ItemId,Title),
	FOREIGN KEY(ItemId) REFERENCES Items(ItemId),
	FOREIGN KEY(Title) REFERENCES Movies(Title)
);

CREATE TABLE Movies(
	Title		CHAR(20)	NOT NULL,
	Year		INTEGER,
	Synopsis	TEXT(500),
	PRIMARY KEY(Title)
);

CREATE TABLE SaleItems(
	Stock 		INTEGER		NOT NULL,
	Price		REAL		NOT NULL,
	ItemId		INTEGER,
	FOREIGN KEY(ItemId) REFERENCES Sold_by(ItemId)
);

CREATE TABLE RentableItems(
	RentPrice	REAL		NOT NULL,
	ItemId		INTEGER,
	FOREIGN KEY(ItemId) REFERENCES Sold_by(ItemId)
);

CREATE TABLE AuctionItems(
	EndTime 	DATE		NOT NULL,
	CurrentBid	REAL		NOT NULL,
	ItemId		INTEGER,
	FOREIGN KEY(ItemId) REFERENCES Sold_by(ItemId)
);

CREATE TABLE Users(
	uid 		INTEGER,
	Password	CHAR(20)	NOT NULL,
	Address 	CHAR(60)	NOT NULL,
	email		CHAR(20)	NOT NULL,
	Age		INTEGER,
	UNIQUE(email),
	PRIMARY KEY(uid)
);

CREATE TABLE CreditCards(
	CardNum		INTEGER,
	User_id		INTEGER,
	CardType	CHAR(20)	NOT NULL,
	CardExp		DATE		NOT NULL,
	PRIMARY KEY(CardNum),
	FOREIGN KEY(User_id) REFERENCES Users(uid)
		ON DELETE CASCADE
);

CREATE TABLE Transactions(
	SellerId	INTEGER,
	uid		INTEGER,
	ItemId		INTEGER,
	TransactionId	INTEGER,
	Revenue		DEC(10,2),
	PRIMARY KEY(TransactionId),
	FOREIGN KEY(SellerId) REFERENCES Users(uid)
		ON DELETE NO ACTION,
	FOREIGN KEY(uid) REFERENCES Users(uid)
		ON DELETE NO ACTION,
	FOREIGN KEY(ItemId) REFERENCES Items(ItemId)
		ON DELETE NO ACTION
);
